import java.io.PrintStream;
import java.util.NoSuchElementException;




public class StringQueueImpl {

		private Node head, tail;
		private class Node {
				private	String item;
				private	Node next;
				Node(String item) {
					 this.item = item;
				   	next = null; 
										}
		}
		StringQueueImpl(int max) {
						head = null; 
						tail = null; 
		}
		public boolean isEmpty() {
					return (head == null); 
		}
		
		public void put(String item) {
			Node node = tail;
			tail = new Node(item);
			if (isEmpty()) head = tail;
			else node.next = tail; 
		}
		
		public String get()throws NoSuchElementException {
			if(!isEmpty()){
			String str = head.item;
			Node node = head.next;
			head = node;
			return str; 	
			}
			else{
				throw new NoSuchElementException("your Queue is empty you can't get items");
			}
		}	
			
			
		public String peek() throws NoSuchElementException{
			if(!isEmpty()){
				return head.item;
			}
			else{
				throw new NoSuchElementException("your queue is empty");
			}
			
		} 
		public void printQueue(PrintStream stream){
			Node current = head;
			if(!isEmpty()){
				while(current != null){
					stream.println(current.item);
					stream.flush();
					current = current.next;
				}
				
			}
			else{
				stream.println("Empty queue");
				stream.flush();
			}
			
		}
        
		public int size(){
			int size = 0;
			Node currentNode = head;
			while(currentNode != tail){
				currentNode = currentNode.next;
				size++ ;
			}
			return size+1;
			
		}
}

